import React, { useEffect, useState } from "react";
const slug=(s)=>s.toLowerCase().replace(/[^a-z0-9]+/g,"-").replace(/(^-|-$)/g,"");
const clamp=(n,a,b)=>Math.max(a,Math.min(n,b));
function useLocal(k,i){const [v,setV]=useState(()=>{try{const r=localStorage.getItem(k);return r?JSON.parse(r):i}catch{return i}});useEffect(()=>{try{localStorage.setItem(k,JSON.stringify(v))}catch{}},[k,v]);return [v,setV]}
function mockCourse(topic,{level="Principiante",audience="Autodidactas curiosos",goal=`Aprender ${topic} con práctica`}={}){const id=slug(topic)+"-"+Date.now();const t=[`Fundamentos de ${topic}`,`Herramientas y flujo de trabajo en ${topic}`,`Proyecto guiado en ${topic}`,`Mejores prácticas y siguientes pasos`];const mk=(b,i)=>({id:slug(b)+"-"+i,title:`${b} · Lección ${i+1}`,concept:`Idea central de ${b} #${i+1}.`,explainer:`Explicación paso a paso con mini ejercicio.`,quiz:[{question:`¿Qué afirma mejor sobre ${b}?`,options:["A","B","C","D"],answerIndex:Math.floor(Math.random()*4),explanation:`Elige la que conecta ${b} con el objetivo.`}],flashcards:[{front:`Definición de ${b}`,back:`Recordatorio breve.`},{front:`Ejemplo de ${b}`,back:`Caso práctico.`}],checklist:[{task:`Anota 3 ideas de ${b}`,done:false},{task:`Crea un mini ejemplo de ${b}`,done:false}],resources:[{label:`Artículo sobre ${b}`,url:`https://example.com/${slug(b)}`}]});const modules=t.map((m,i)=>({id:slug(m)+"-"+i,title:m,summary:`Qué aprenderás en “${m}”.`,lessons:[0,1,2].map(j=>mk(m,j))}));return {id,topic,goal,audience,level,estimatedHours:10+Math.floor(Math.random()*6),modules}};
const Card=({title,action,children,className=""})=>(<div className={`rounded-2xl border border-neutral-200 bg-white shadow-sm p-5 ${className}`}><div className="flex items-center justify-between gap-4 mb-3">{title&&<h3 className="text-lg font-semibold">{title}</h3>}{action}</div>{children}</div>);
const Btn=({variant="primary",className="",...p})=>{const base="px-4 py-2 rounded-xl text-sm font-medium transition";const styles={primary:"bg-black text-white hover:bg-neutral-800 disabled:bg-neutral-300 disabled:text-neutral-600",ghost:"bg-transparent border border-neutral-300 hover:bg-neutral-100",subtle:"bg-neutral-100 hover:bg-neutral-200"};return <button {...p} className={`${base} ${styles[variant]} ${className}`} />};
const Pill=({children})=>(<span className="inline-flex items-center rounded-full px-3 py-1 text-xs font-medium bg-neutral-100 border border-neutral-200">{children}</span>);
function Header(){return(<header className="sticky top-0 z-10 backdrop-blur supports-[backdrop-filter]:bg-white/70 bg-white/90 border-b border-neutral-200"><div className="max-w-6xl mx-auto px-4 py-3 flex items-center gap-3"><div className="w-9 h-9 rounded-xl bg-gradient-to-br from-black to-neutral-700 text-white grid place-items-center font-bold">C</div><div className="leading-tight"><h1 className="text-base font-semibold">Creador de Cursos — PRO</h1><p className="text-xs text-neutral-500">Escribe un tema y genera un curso interactivo</p></div><div className="ml-auto hidden md:flex gap-2"><Pill>UI Pro</Pill><Pill>Export/Import</Pill><Pill>Progreso local</Pill></div></div></header>)}
function Prompt({onGenerate}){const [topic,setTopic]=useState("");const [level,setLevel]=useState("Principiante");const [audience,setAudience]=useState("Autodidactas curiosos");const [goal,setGoal]=useState("");const [loading,setLoading]=useState(false);async function gen(){if(!topic.trim())return;setLoading(true);let course=null;const t0=performance.now();try{const r=await fetch("/api/generate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({topic,level,audience,goal})});if(r.ok){const j=await r.json();course=j;const t1=performance.now();course.__metrics=course.__metrics||{};course.__metrics.latency_ms=Math.round(t1-t0);course.__metrics.provider=course.__metrics.provider||"openai";}}catch(e){}if(!course){course=mockCourse(topic,{level,audience,goal});course.__metrics={provider:"mock",latency_ms:0};}onGenerate(course);setLoading(false);}return(<Card title="1) Describe el curso" action={<Btn onClick={gen} disabled={loading||!topic}>{loading?"Generando…":"Generar curso"}</Btn>}><div className="grid md:grid-cols-2 gap-4"><div className="md:col-span-2"><label className="text-sm font-medium">Tema / Prompt</label><input className="mt-1 w-full rounded-xl border border-neutral-300 px-3 py-2 outline-none focus:ring-2 focus:ring-black" placeholder="Ej: Programación creativa con p5.js" value={topic} onChange={e=>setTopic(e.target.value)}/></div><div><label className="text-sm font-medium">Nivel</label><select className="mt-1 w-full rounded-xl border border-neutral-300 px-3 py-2" value={level} onChange={e=>setLevel(e.target.value)}>{["Principiante","Intermedio","Avanzado","Mixto"].map(x=><option key={x}>{x}</option>)}</select></div><div><label className="text-sm font-medium">Audiencia</label><input className="mt-1 w-full rounded-xl border border-neutral-300 px-3 py-2" value={audience} onChange={e=>setAudience(e.target.value)} placeholder="A quién va dirigido"/></div><div className="md:col-span-2"><label className="text-sm font-medium">Objetivo (opcional)</label><input className="mt-1 w-full rounded-xl border border-neutral-300 px-3 py-2" value={goal} onChange={e=>setGoal(e.target.value)} placeholder="¿Qué resultado buscas?"/></div></div><div className="mt-3 text-xs text-neutral-500">Consejo: tema + público + resultado. Ej: “Ilustración digital para principiantes que quieren su primer portafolio”.</div></Card>)}
function Sidebar({course,current,onPick,onExport,onImport}){return(<aside className="w-full md:w-80 shrink-0"><div className="sticky top-16 space-y-4"><Card title="Curso"><h4 className="font-semibold">{course.topic}</h4><p className="text-sm text-neutral-600">{course.goal}</p><div className="flex gap-2 mt-2 flex-wrap"><Pill>{course.level}</Pill><Pill>{course.estimatedHours}h</Pill><Pill>{course.audience}</Pill></div>{course.__metrics&&(<div className="mt-3 text-xs text-neutral-500">Motor: {course.__metrics.provider} · Latencia: {course.__metrics.latency_ms??"–"} ms · Tokens: {course.__metrics?.usage?.total_tokens??"–"}</div>)}<div className="mt-4 flex gap-2"><Btn variant="ghost" onClick={onExport}>Exportar</Btn><label className="px-4 py-2 rounded-xl text-sm font-medium border border-neutral-300 cursor-pointer">Importar<input type="file" accept="application/json" className="hidden" onChange={onImport}/></label></div></Card><Card title="Módulos & Lecciones"><nav className="space-y-3">{course.modules.map(m=>(<div key={m.id}><p className="font-medium">{m.title}</p><ul className="mt-1 space-y-1">{m.lessons.map(l=>(<li key={l.id}><button onClick={()=>onPick(m.id,l.id)} className={`text-left w-full px-3 py-2 rounded-lg border ${current.lesson?.id===l.id?"bg-black text-white border-black":"border-neutral-300 hover:bg-neutral-100"}`}>{l.title}</button></li>))}</ul></div>))}</nav></Card></div></aside>)}
function Quiz({item,onScore}){const [pick,setPick]=useState(null);const [done,setDone]=useState(false);const ok=pick===item.answerIndex;return(<div className="space-y-2"><p className="font-medium">{item.question}</p><div className="grid gap-2">{item.options.map((opt,i)=>(<label key={i} className={`flex items-center gap-2 rounded-xl border p-3 cursor-pointer ${pick===i?"border-black":"border-neutral-300"}`}><input type="radio" name="quiz" checked={pick===i} onChange={()=>setPick(i)}/><span>{opt}</span></label>))}</div><div className="flex items-center gap-2"><Btn onClick={()=>{setDone(true);onScore?.(ok)}} disabled={pick===null}>Comprobar</Btn>{done&&(<span className={`text-sm ${ok?"text-green-600":"text-red-600"}`}>{ok?"¡Correcto!":"No es correcto"} · {item.explanation}</span>)}</div></div>)}
function Flashcards({cards}){const [i,setI]=useState(0);const c=cards[i];return(<div className="space-y-3"><div className="rounded-2xl border border-neutral-200 p-6 bg-neutral-50"><p className="text-sm text-neutral-500">Tarjeta {i+1}/{cards.length}</p><p className="text-xl font-semibold mt-2">{c.front}</p><details className="mt-2"><summary className="cursor-pointer text-sm text-neutral-600">Mostrar respuesta</summary><p className="mt-2">{c.back}</p></details></div><div className="flex gap-2"><Btn variant="ghost" onClick={()=>setI(clamp(i-1,0,cards.length-1))}>Anterior</Btn><Btn onClick={()=>setI(clamp(i+1,0,cards.length-1))}>Siguiente</Btn></div></div>)}
function Checklist({items,onToggle}){return(<ul className="space-y-2">{items.map((it,idx)=>(<li key={idx} className="flex items-center gap-2"><input type="checkbox" checked={it.done} onChange={()=>onToggle?.(idx)}/><span className={it.done?"line-through text-neutral-500":""}>{it.task}</span></li>))}</ul>)}
function LessonView({lesson,onUpdate,progressKey}){const [local,setLocal]=useState(lesson);useEffect(()=>setLocal(lesson),[lesson]);useEffect(()=>{onUpdate?.(local)},[local]);const [score,setScore]=useLocal(`${progressKey}:${lesson.id}:quiz`,0);const [done,setDone]=useLocal(`${progressKey}:${lesson.id}:done`,false);return(<div className="space-y-6"><Card title={lesson.title} action={<Btn variant="ghost" onClick={()=>setDone(!done)}>{done?"Marcar pendiente":"Marcar completada"}</Btn>}><p className="text-sm text-neutral-600 mb-2">{lesson.concept}</p><p className="mb-4">{lesson.explainer}</p><div className="flex gap-2 flex-wrap"><span className="inline-flex items-center rounded-full px-3 py-1 text-xs font-medium bg-neutral-100 border border-neutral-200">{done?"Completada":"En progreso"}</span><span className="inline-flex items-center rounded-full px-3 py-1 text-xs font-medium bg-neutral-100 border border-neutral-200">Quiz: {score}%</span><span className="inline-flex items-center rounded-full px-3 py-1 text-xs font-medium bg-neutral-100 border border-neutral-200">Flashcards: {lesson.flashcards.length}</span></div></Card><Card title="Quiz rápido">{lesson.quiz.map((q,i)=>(<Quiz key={i} item={q} onScore={(ok)=>setScore(s=>clamp(Math.round((s+(ok?100:0))/2),0,100))}/>))}</Card><Card title="Flashcards"><Flashcards cards={lesson.flashcards}/></Card><Card title="Checklist práctica"><Checklist items={local.checklist} onToggle={(idx)=>{const up=[...local.checklist];up[idx]={...up[idx],done:!up[idx].done};setLocal({...local,checklist:up})}}/></Card><Card title="Recursos"><ul className="list-disc pl-6">{lesson.resources.map((r,i)=>(<li key={i}><a className="underline" href={r.url} target="_blank" rel="noreferrer">{r.label}</a></li>))}</ul></Card></div>)}
function Workspace({course,setCourse}){const [sel,setSel]=useLocal(`course:${course.id}:sel`,{moduleId:course.modules[0].id,lessonId:course.modules[0].lessons[0].id});const mod=course.modules.find(m=>m.id===sel.moduleId)||course.modules[0];const les=mod.lessons.find(l=>l.id===sel.lessonId)||mod.lessons[0];const key=`course:${course.id}`;const pick=(mid,lid)=>setSel({moduleId:mid,lessonId:lid});const update=(u)=>{setCourse(prev=>({...prev,modules:prev.modules.map(m=>m.id===mod.id?{...m,lessons:m.lessons.map(l=>l.id===u.id?u:l)}:m)}))};const onExport=()=>{const data=JSON.stringify(course,null,2);const blob=new Blob([data],{type:"application/json"});const url=URL.createObjectURL(blob);const a=document.createElement("a");a.href=url;a.download=`${slug(course.topic)}.json`;a.click();URL.revokeObjectURL(url)};const onImport=(e)=>{const f=e.target.files?.[0];if(!f)return;const rd=new FileReader();rd.onload=()=>{try{const imp=JSON.parse(rd.result);if(!imp?.modules)throw new Error("JSON inválido");setCourse(imp)}catch{alert("No se pudo importar. JSON inválido.")}};rd.readAsText(f)};return(<div className="max-w-6xl mx-auto px-4 grid md:grid-cols-[20rem,1fr] gap-6 pb-16"><Sidebar course={course} current={{module:mod,lesson:les}} onPick={pick} onExport={onExport} onImport={onImport}/><main><LessonView lesson={les} onUpdate={update} progressKey={key}/></main></div>)}
export default function App(){const [course,setCourse]=useLocal("pro:course",null);return(<div className="min-h-screen bg-neutral-50"><header className="sticky top-0 z-10 backdrop-blur supports-[backdrop-filter]:bg-white/70 bg-white/90 border-b border-neutral-200"><div className="max-w-6xl mx-auto px-4 py-3 flex items-center gap-3"><div className="w-9 h-9 rounded-xl bg-gradient-to-br from-black to-neutral-700 text-white grid place-items-center font-bold">C</div><div className="leading-tight"><h1 className="text-base font-semibold">Creador de Cursos — PRO</h1><p className="text-xs text-neutral-500">Escribe un tema y genera un curso interactivo</p></div></div></header><div className="max-w-6xl mx-auto px-4 py-6 space-y-6">{!course&&<Prompt onGenerate={setCourse}/>} {course&&(<Card title="2) Tu curso" action={<Btn variant="ghost" onClick={()=>setCourse(null)}>Crear otro</Btn>}><div className="flex flex-col md:flex-row md:items-center gap-2 text-sm text-neutral-700"><div><span className="font-semibold">Tema:</span> {course.topic}</div><div className="hidden md:block">·</div><div><span className="font-semibold">Nivel:</span> {course.level}</div><div className="hidden md:block">·</div><div><span className="font-semibold">Audiencia:</span> {course.audience}</div><div className="hidden md:block">·</div><div><span className="font-semibold">Horas estimadas:</span> {course.estimatedHours}h</div></div></Card>)}</div>{course&&<Workspace course={course} setCourse={setCourse}/>}<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" /></div>)}
